and anda as-cas
cases case
datatype else end exception
fn fun handle if implicit in infix infixr infixl
let local nonfix of open prefix raise rec then type
val while withtype : ::++:: _ __ _::_
| || |-| = == foo.= * ** foo.* => <= <=> -> --> # ## #=
foo.=>
(*xx*)
foo.->
(*xx*)
